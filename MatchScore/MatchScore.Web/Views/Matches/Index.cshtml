@model MatchIndexVM

@{
    this.ViewData["Title"] = "Matches Index";
}

@*Search Box:*@
<form asp-controller="Matches" asp-action="Index" method="get">
    <p>Search</p>
    <menu>
        <li>
            Sort By:<br />
            <input type="radio" name="SortBy" value="date">
            <label>Date</label><br />
        </li>
        <li>
            Sort Order:<br />
            <input type="radio" name="SortOrder" value="desc">
            <label>Descending</label>
        </li>
        <li>Date: <input type="date" name="Date"></li>
        <li>Player: <input type="text" name="Player" /></li>
        <li>City: <input type="text" name="City" /></li>
        <li>Event: <input type="text" name="EventTitle" /></li>
        @*add filter by date!*@
        <li><input type="submit" value="Search" /></li>
    </menu>
</form>

@*Matches Table*@
<table>
    <tr>Matches</tr>
    <tr>
        <th>#</th>
        <th>Date</th>
        <th>Location</th>
        <th>Winner</th>
        <th>Event</th>
    </tr>
    @if (this.Model.Matches.Count == 0)
    {
        <tr>No matches</tr>
    }
    else
    {
        @foreach (var match in this.Model.Matches)
        {
            <tr>
                @{var row = this.Model.Matches.IndexOf(match) + 1;}
                <td><a asp-controller="Matches" asp-action="Details" asp-route-id="@match.MatchId">@row</a></td>
                <td>@match.Date.ToString(Messages.DateDisplay)</td>
                <td>@match.LocationCity, @(((Countries)match.LocationCountry).AsString(EnumFormat.Description))</td>
                @if (match.WinnerName == "")
                {
                    <td>Ongoing</td>
                }
                else if (match.WinnerName == "tie")
                {
                    <td>TIE</td>
                }
                else
                {
                    <td><a asp-controller="Players" asp-action="Details" asp-route-id="@match.WinnerId">@match.WinnerName</a></td>
                }
                <td><a asp-controller="Events" asp-action="Details" asp-route-id="@match.EventId">@match.EventTitle</a></td>
            </tr>
        }
    }
</table>

@*Buttons for pagination*@
@{
    string prevButtonState = !this.Model.HasPrevPage ? "disabled" : "";
    string nextButtonState = !this.Model.HasNextPage ? "disabled" : "";
}

<a asp-controller="Players" asp-action="Index" asp-route-CurrentPage="@(this.Model.CurrentPage - 1)" class="btn @prevButtonState">Prev</a>
<a asp-controller="Players" asp-action="Index" asp-route-CurrentPage="@(this.Model.CurrentPage + 1)" class="btn @nextButtonState">Next</a>

