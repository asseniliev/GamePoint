@using MatchScore.Web.ViewModels.EventViewModels;
@model MultiRoundEventVM;


<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
<link href='https://fonts.googleapis.com/css?family=Holtwood+One+SC' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Kaushan+Script|Herr+Von+Muellerhoff' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Abel' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Istok+Web|Roboto+Condensed:700' rel='stylesheet' type='text/css'>

<link href="~/css/brackets.css" rel="stylesheet" />

<section id="bracket">
    <h1>Saturday Session</h1>
    <div class="container">
        <div class="split split-one">
            @for (int round = 0; round < this.Model.MatchScheme.Count / 2; round++)
            {
                <div class="round round-one current">
                    <div class="round-details">
                        @{
                            string roundHeader = "Round " + (round + 1).ToString();
                            @roundHeader <br />
                            @*<span class="date">March 16</span>*@
                        }
                    </div>
                    @foreach (var match in this.Model.MatchScheme[round])
                    {
                        string player1 = "";
                        string player2 = "";
                        double? player1Score = null;
                        double? player2Score = null;

                        player1 = match.Players[0].Name;
                        player2 = match.Players[1].Name;

                        if (Model.MatchScores.ContainsKey(match.MatchId))
                        {
                            player1Score = @Model.MatchScores[match.MatchId][0];
                            player2Score = @Model.MatchScores[match.MatchId][1];
                        }
                        <ul class="matchup">
                            <li class="team team-top">
                                @player1
                                <input class="scoreinput score" type="text" asp-for="@Model.Player1Score" value="@player1Score" disabled>
                            </li>
                            <li class="team team-bottom">
                                @player2
                                <input class="scoreinput score" type="text" asp-for="@Model.Player2Score" value="@player2Score" disabled>
                            </li>
                        </ul>
                    }
                </div>
            }
        </div>
    </div>

    <br /><br /><br /><br />

    <h1>Sunday Session</h1>
    <div class="container">
        <div class="split split-one">
            @for (int round = this.Model.MatchScheme.Count / 2; round < this.Model.MatchScheme.Count; round++)
            {
                <div class="round round-one current">
                    <div class="round-details">
                        @{
                            string roundHeader = "Round " + (round + 1).ToString();
                            @roundHeader <br />
                            @*<span class="date">March 16</span>*@
                        }
                    </div>
                    @foreach (var match in this.Model.MatchScheme[round])
                    {
                        string player1 = "";
                        string player2 = "";
                        double? player1Score = null;
                        double? player2Score = null;

                        player1 = match.Players[0].Name;
                        player2 = match.Players[1].Name;

                        if (Model.MatchScores.ContainsKey(match.MatchId))
                        {
                            player1Score = @Model.MatchScores[match.MatchId][0];
                            player2Score = @Model.MatchScores[match.MatchId][1];
                        }
                        <ul class="matchup">
                            <li class="team team-top">
                                @player1
                                <input class="scoreinput score" type="text" asp-for="@Model.Player1Score" value="@player1Score" disabled>
                            </li>
                            <li class="team team-bottom">
                                @player2
                                <input class="scoreinput score" type="text" asp-for="@Model.Player2Score" value="@player2Score" disabled>
                            </li>
                        </ul>
                    }
                </div>
            }
        </div>
    </div>
    <form asp-controller="Events" asp-action="Edit" method="get">
        <input type="hidden" asp-for="EventId" value="@this.Model.EventId" />
        <input type="submit" value="Back to Event" class="btn btn-primary fa-lg gradient-custom-2 ml-4" />
    </form>
</section>

